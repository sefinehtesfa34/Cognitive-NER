# Named Entity Recognition (NER) with BERT and Flask

This project demonstrates Named Entity Recognition (NER) using the BERT model and Flask web framework. NER is a natural language processing task where the goal is to locate and classify named entities mentioned in unstructured text into predefined categories such as the names of persons, organizations, locations, etc.

## Requirements

- Python 3.x
- torch
- transformers
- datasets
- Flask
- Flask-CORS

You can install the required packages using pip:


## Usage

1. Clone this repository to your local machine.

2. Install the required packages as mentioned above.

3. Run the Flask app:


4. Once the server is running, you can access the NER extraction endpoint at `http://localhost:5000/extract_entities`.

## API Endpoints

- `GET /`: Renders the home page.

- `POST /extract_entities`: Extracts named entities from the provided text.

    - Input:
        ```json
        {
            "text": "Your text goes here."
        }
        ```

    - Output:
        ```json
        [
            {
                "word": "entity_word",
                "entity": "entity_type"
            },
            ...
        ]
        ```

## Model

This project uses the BERT (Bidirectional Encoder Representations from Transformers) model fine-tuned for token classification. The model is loaded using the `transformers` library.

## Dataset

The CoNLL-2003 dataset is used for training and testing the NER model. It contains news articles annotated with named entity labels.

## Acknowledgments

- [Hugging Face](https://huggingface.co/) for providing pre-trained transformer models and tokenizers.
- [Flask](https://flask.palletsprojects.com/) for the web framework.
- [CoNLL-2003 dataset](https://www.clips.uantwerpen.be/conll2003/ner/) for named entity recognition.

